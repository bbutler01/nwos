# WI_FFO_OWN_AC_MEAN
# sqrt(var(WI_FFO_OWN_AC_MEAN_REP))
WI_FFO_AC_AC_MEAN <- nwos_mean(weight = wi$WEIGHT, area = wi$AC_WOOD, variable = wi$AC_WOOD)
WI_FFO_AC_AC_MEAN_REP <- sapply(1:length(WI_REPLICATES),
nwos_mean_apply,
index.rep = WI_REPLICATES,
index = wi$ROW_NAME,
weight = WI_FFO_WEIGHTS_REP,
area = wi$AC_WOOD,
variable = wi$AC_WOOD)
WI_FFO_AC_AC_MEAN
WI_FFO_OWN_AC_MEAN
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_mean_apply.R')
WI_FFO_OWN_Y_3_MEAN <- nwos_mean(weight = wi$WEIGHT, variable = wi$Y_3)
WI_FFO_OWN_Y_3_MEAN_REP <- sapply(1:length(WI_REPLICATES),
nwos_mean_apply,
index.rep = WI_REPLICATES,
index = wi$ROW_NAME,
weight = WI_FFO_WEIGHTS_REP,
variable = "Y_3")
WI_FFO_OWN_Y_3_MEAN_REP <- sapply(1:length(WI_REPLICATES),
nwos_mean_apply,
index.rep = WI_REPLICATES,
index = wi$ROW_NAME,
weight = WI_FFO_WEIGHTS_REP,
variable = wi$Y_3)
# WI_FFO_OWN_Y_3_MEAN
# sqrt(var(WI_FFO_OWN_Y_3_MEAN_REP))
WI_FFO_AC_Y_3_MEAN <- nwos_mean(weight = wi$WEIGHT, area = wi$AC_WOOD, variable = wi$Y_3)
WI_FFO_AC_Y_3_MEAN_REP <- sapply(1:length(WI_REPLICATES),
nwos_mean_apply,
index.rep = WI_REPLICATES,
index = wi$ROW_NAME,
weight = WI_FFO_WEIGHTS_REP,
area = wi$AC_WOOD,
variable = wi$Y_3)
nwos_quantile(weight = wi$WEIGHT, domain = wi$FFO, variable = wi$AC_WOOD)
nwos_quantile(weight = wi$WEIGHT, area = wi$AC_WOOD, domain = wi$FFO, variable = wi$AC_WOOD)
wi$WEIGHT_TRIMMED <- nwos_weights_trimmed(weights = wi$WEIGHT)
summary(wi$WEIGHT[wi$WEIGHT > 0])
summary(wi$WEIGHT_TRIMMED[wi$WEIGHT_TRIMMED > 0])
library(devtools)
rm(list=ls())
library(roxygen2)
document()
document()
library(tidyverse)
require(ggmap)
require(maps)
us <- map_data("county")
ggplot() + geom_map(data=us, map=us, aes(x=long, y=lat, map_id=region), fill="cornsilk", color="black") +
coord_map("albers", lat0 = 39, lat1 = 45)
us
ggplot() + geom_map(data=us %>% filter(region = "georgia"), map=us, aes(x=long, y=lat, map_id=region), fill="cornsilk", color="black") +
coord_map("albers", lat0 = 39, lat1 = 45)
ggplot() + geom_map(data=us %>% filter(region == "georgia"), map=us, aes(x=long, y=lat, map_id=region), fill="cornsilk", color="black") +
coord_map("albers", lat0 = 39, lat1 = 45)
?map_data
# Generate map
ggplot() + geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region),
fill="cornsilk", color="black")
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region),
fill="cornsilk", color="black") +
coord_map("albers", lat0 = 39, lat1 = 45)
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region),
fill="cornsilk", color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region),
fill=1:5, color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
cnty.fips <- data(county.fips)
cnty.fips
data(county.fips)
require(maps)
library(maps)
cnty.fips <- data(county.fips)
cnty.fips
rm(list=ls())
cnty.fips <- data(county.fips)
data(county.fips)
install.packages("maps")
# require(ggmap)
library(maps)
cnty.fips <- data(county.fips)
?county.fips
cnty.fips <- data(state.fips)
cnty.fips <- data(county.fips)
cnty.fips
county.fips
?strsplit
strsplit(county.fips$polyname[1], ",")
strsplit(county.fips$polyname, ",")
unlist(strsplit(county.fips$polyname, ","))
unlist(strsplit(county.fips$polyname, ","), fixed= T)
unlist(strsplit(county.fips$polyname, "," fixed= T))
unlist(strsplit(county.fips$polyname, ",", fixed= T))
strsplit(county.fips$polyname, ",")
strsplit(county.fips$polyname, ",")[[1]]
strsplit(county.fips$polyname, ",")[1]
l <- strsplit(county.fips$polyname, ",")
data.frame(matrix(unlist(l), nrow=length(l), byrow=T))
df <- data.frame(matrix(unlist(l), nrow=length(l), byrow=T))
View(df)
?data.frame
names(data.frame)
dimnames(data.frame)
names(df)
names(df) <- c("state", "county")
df <- tibble(matrix(unlist(l), nrow=length(l), byrow=T))
library(tidyverse)
df <- tibble(matrix(unlist(l), nrow=length(l), byrow=T))
df
?tibble
names(df)
df <- tibble(matrix(unlist(l), nrow=length(l), byrow=T))
names(df)
df
names(df) <- c("state", "county")
df <- as_tibble(data.frame(matrix(unlist(l), nrow=length(l), byrow=T)))
df
names(df) <- c("state", "county")
df
df <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=length(county.fips), byrow=T)))
names(df) <- c("state", "county")
df
length(county.fips)
NROW(county.fips)
df <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=NROW(county.fips), byrow=T)))
names(df) <- c("state", "county")
df
county.names <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=NROW(county.fips), byrow=T)))
names(county.names) <- c("state", "county")
county.names
county.fips <- cbind(county.fips, county.names)
county.fips
county.fips <- bind_cols(as_tibble(county.fips), county.names)
county.fips
data(county.fips)
county.names <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=NROW(county.fips), byrow=T)))
names(county.names) <- c("state", "county")
county.fips <- bind_cols(as_tibble(county.fips), county.names)
county.fips
us
# Setup data
us <- map_data("county")
us
?match
us$fips <- county.fips$fips[match(paste0(us$region, us$subregion),
paste0(county.fips$state, county.fips$county))]
us$fips
?sample
# Add data to be mapped
x <- tibble(county.fips$fips, sample(c("red", "blue", "yellow")))
length(county.fips$fips)
# Add data to be mapped
x <- tibble(county.fips$fips, sample(c("red", "blue", "yellow"), n = length(county.fips$fips)))
sample(c("red", "blue", "yellow"), n = length(county.fips$fips))
# Add data to be mapped
x <- tibble(county.fips$fips, sample(c("red", "blue", "yellow"), length(county.fips$fips)))
# Add data to be mapped
x <- tibble(county.fips$fips, sample(c("red", "blue", "yellow"), length(county.fips$fips), replace = T))
x
# Add data to be mapped
x <- tibble(fips = county.fips$fips, sample(c("red", "blue", "yellow"), length(county.fips$fips), replace = T))
x
# Add data to be mapped
x <- tibble(fips = county.fips$fips,
variable = sample(c("red", "blue", "yellow"),
length(county.fips$fips), replace = T))
x
us$x <- x$variable[match(us$fips, x$fips)]
us$variable <- x$variable[match(us$fips, x$fips)]
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region),
fill=variable, color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=variable),
, color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
us %>% filter(region == "georgia")
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=variable),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
?geom_map
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill="red"),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
str(us)
us$variable <- as.factor(x$variable[match(us$fips, x$fips)])
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=variable),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
us$value <- as.factor(x$variable[match(us$fips, x$fips)])
ggplot(us, aes(map_id = region)) +
geom_map(aes(fill = value), map = us)
# Generate map
ggplot(us, aes(map_id = region)) +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=variable),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
rm(list=ls())
# Setup data
us <- map_data("county")
data(county.fips)
county.names <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=NROW(county.fips), byrow=T)))
names(county.names) <- c("state", "county")
county.fips <- bind_cols(as_tibble(county.fips), county.names)
us$fips <- county.fips$fips[match(paste0(us$region, us$subregion),
paste0(county.fips$state, county.fips$county))]
# Add data to be mapped
x <- tibble(fips = county.fips$fips,
variable = sample(c("red", "blue", "yellow"),
length(county.fips$fips), replace = T))
us$value <- as.factor(x$variable[match(us$fips, x$fips)])
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=variable),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
ggplot() +
geom_map(data=us,
map=us, aes(x=long, y=lat, map_id=region, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=subregion, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=region, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
us
# Generate map
ggplot() +
geom_map(data=us %>% filter(region == "georgia"),
map=us, aes(x=long, y=lat, map_id=subregion, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
ga <- us %>% filter(region == "georgia")
# Generate map
ggplot() +
geom_map(data=ga,
map=ga, aes(x=long, y=lat, map_id=region, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(data=ga,
map=ga, aes(x=long, y=lat, map_id=region, fill=value),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(data=ga,
map=ga, aes(x=long, y=lat, map_id=region),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
ga
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(data=ga,
map=ga,
aes(x=long, y=lat, map_id=subregion),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
?geom_map
ga$value
county.names <- as_tibble(data.frame(matrix(unlist(strsplit(county.fips$polyname, ",")), nrow=NROW(county.fips), byrow=T)))
names(county.names) <- c("state", "county")
county.fips <- bind_cols(as_tibble(county.fips), county.names)
us$fips <- county.fips$fips[match(paste0(us$region, us$subregion),
paste0(county.fips$state, county.fips$county))]
# Add data to be mapped
x <- tibble(fips = county.fips$fips,
variable = sample(1:3,
length(county.fips$fips), replace = T))
us$value <- as.factor(x$variable[match(us$fips, x$fips)])
ga <- us %>% filter(region == "georgia")
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(data=ga,
map=ga,
aes(x=long, y=lat, map_id=subregion),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(data=ga,
map=ga,
aes(x=long, y=lat, map_id=region),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=subregion),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
ga$subregion
ga$region
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region),
color="black") +
coord_map("albers", lat0 = 39, lat1 = 45) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region),
color="black")
# Generate map
ggplot(ga, aes(fill=value)) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill=value),
color="black")
# Generate map
ggplot(ga, aes(fill="black")) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill=value),
color="black")
# Generate map
ggplot(ga, aes(fill="black")) +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill="black"),
color="black")
# Generate map
ggplot() +
geom_map(#data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill="black"),
color="black")
# Generate map
ggplot() +
geom_map(data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill="black"),
color="black")
# Generate map
ggplot() +
geom_map(data=ga,
map=ga,
aes(x=long, y=lat, map_id=region, fill=value),
color="black")
ggplot(ga, aes(map_id = region)) +
geom_map(aes(x=long, y=lat, fill=value),
map=ga)
