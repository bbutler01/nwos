df <- rbind(data.frame(INDEX = 1:NROW(df)), df) # Add index
df <- cbind(data.frame(INDEX = 1:NROW(df)), df) # Add index
df <- cbind(INDEX = 1:NROW(df), df) # Add index
df <- SAMPLE_SIZE_SAMPLES[SAMPLE_SIZE_SAMPLES$SAMPLE==1 & SAMPLE_SIZE_SAMPLES$SIZE==1000, ]
# Expand df
row.names(df) <- 1:NROW(df) # Rename rows to ensure unique values
df <- df[rep(row.names(df), df$POINT_COUNT), ] # Expand df based on POINT_COUNT
df$POINT_COUNT <- 1
df <- cbind(INDEX = 1:NROW(df), df) # Add index
names(df)
View(df)
df <- SAMPLE_SIZE_SAMPLES[SAMPLE_SIZE_SAMPLES$SAMPLE==1 & SAMPLE_SIZE_SAMPLES$SIZE==1000, ]
# Expand df
row.names(df) <- 1:NROW(df) # Rename rows to ensure unique values
df <- df[rep(row.names(df), df$POINT_COUNT), ] # Expand df based on POINT_COUNT
row.names(df) <- 1:NROW(df) # Rename rows to ensure unique values
df$POINT_COUNT <- 1
df <- cbind(INDEX = 1:NROW(df), df) # Add index
View(df)
unique(df$STATE_CD)
s <- 55
df.s <- df[df$STATE_CD == s,]
replicates <- matrix(nrow = NROW(df.s), ncol = R)
r <- 1
replicates[,r] <- df.s$INDEX[sample(row.names(df.s), NROW(df.s), replace=T)] # Sample
View(replicates)
df.s$INDEX
sample(df.s$INDEX, NROW(df.s), replace=T)
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
View(replicates)
dimnames(replicates)
dimnames(replicates) <- list(NULL, 1:R)
replicates <- matrix(nrow = NROW(df.s), ncol = R, dimnames = list(NULL, 1:R))
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
View(replicates)
x <- list(STATECD = s, REPLICATES = replicates)
x
x <- list(STATECD = s, ST_55 = replicates)
x
x <- list(STATECD = s, 55 = replicates)
?list
x2 <- list(x, x)
x2
x2 <- list(x2, x)
str(x2)
?append.list
for(r in 1:R) {  ## CONVERT TO APPLY ##
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
}
View(replicates)
R <- 1000
replicates <- matrix(nrow = NROW(df.s), ncol = R, dimnames = list(NULL, 1:R))
for(r in 1:R) {  ## CONVERT TO APPLY ##
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
for(r in 1:R) {  ## CONVERT TO APPLY ##
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
}
df.s <- df[df$STATE_CD == s,]
replicates <- matrix(nrow = NROW(df.s), ncol = R, dimnames = list(NULL, 1:R))
for(r in 1:R) {  ## CONVERT TO APPLY ##
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Sample
}
View(replicates)
?lappy
?lapply
?apply
replicate.list <- list(ST_55 = replicates)
replicate.list
replicate.list <- list(ST_55 = replicates, ST_55 = replicates)
R <- 10
replicates <- matrix(nrow = NROW(df.s), ncol = R, dimnames = list(NULL, 1:R)) # Create empty matrix
for(r in 1:R) {
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Generate replicates, indicated by INDEX
}
replicate.list <- list(ST_55 = replicates, ST_55 = replicates)
replicate.list
replicates <- matrix(nrow = NROW(df.s), ncol = R, dimnames = list(1:NROW(df.s), 1:R)) # Create empty matrix
for(r in 1:R) {
replicates[,r] <- sample(df.s$INDEX, NROW(df.s), replace=T) # Generate replicates, indicated by INDEX
}
replicate.list <- list(ST_55 = replicates, ST_55 = replicates)
replicate.list
replicate.list <- list(ST_55 = replicates, ST_55.2 = replicates)
object.size(replicate.list)
replicate.list[["ST_55.3"]] <- replicates
replicate.list <- list()
replicate.list[["ST_55.3"]] <- replicates
replicate.list[[paste0("ST_", s)]] <- replicates
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
x <-nwos_replicates(df, R = 10)
x
x <-nwos_replicates(df, R = 100)
x
x[["ST_55]]
""
x[["ST_55"]]
sum(x[["ST_55"]])
df.replicates <-nwos_replicates(df, R = 100)
str(df.replicates)
object.size(df.replicates)
?object.size
df.replicates <-nwos_replicates(df, R = 10000)
object.size(df.replicates)
save(df.replicates, "data/DF_REPLICATES.RData")
save(df.replicates, file = "data/DF_REPLICATES.RData")
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
df.replicates <-nwos_replicates(df, R = 10000)
save(df.replicates, file = "data/DF_REPLICATES.RData")
df <- SAMPLE_SIZE_SAMPLES[SAMPLE_SIZE_SAMPLES$STATE_CD == 55 & SAMPLE_SIZE_SAMPLES$SAMPLE==1 & SAMPLE_SIZE_SAMPLES$SIZE==1000, ]
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
str(df.replicates)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
View(df.replicates[[df]])
View(df.replicates[["df"]])
View(df.replicates[["df"]])
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
View(df.replicates[["df"]])
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 10000)
end_time <- Sys.time()
end_time - start_time
0.7170699 * 50
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 5000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 5000)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
df.replicates <-nwos_replicates(df, R = 5000)
end_time <- Sys.time()
end_time - start_time
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
?saveRDS
?sample
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
load("../../ANALYSIS/SAMPLE_SIZE/DATA/WI_SAMPLE_SIZE_SAMPLES_20180721.RData")
df <- SAMPLE_SIZE_SAMPLES[SAMPLE_SIZE_SAMPLES$STATE_CD == 55 & SAMPLE_SIZE_SAMPLES$SAMPLE==1 & SAMPLE_SIZE_SAMPLES$SIZE==1000, ]
df.replicates <-nwos_replicates(df)
df.replicates <-nwos_replicates(df)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
library(devtools)
setwd("..")
install("nwos")
setwd("..")
install("nwos")
getwd()
setwd("nwos")
setwd("..")
ls()
list.files()
install("nwos")
setwd("nwos")
# devtools::install_git("git://github.com/bbutler01/nwos.git")
library(nwos)
library(ggplot2)
names(df)
summary(df)
View(df)
df$STRATUM <- ifelse(df$LAND_USE == 1 & df$OWN_CD == 45, 1, 0)
load("../../ANALYSIS/DATA/DATA/PARC_STATS_20180716.RData") # Get State Total Land Area
load("../../ANALYSIS/DATA/PARC_STATS_20180716.RData") # Get State Total Land Area
load("../../ANALYSIS/DATA/PARC_STATS_20180716.RData")
LAND_AREA <- PARC_STATS$VALUE[PARC_STATS$DOMAIN=="ALL_LAND"]
STATE_AREA <- PARC_STATS$VALUE[PARC_STATS$DOMAIN=="ALL_LAND"]
STRATUM_AREA <- nwos_stratum_area(state.area = STATE_AREA, stratum = df$STRATUM, point.count = df$STRATUM)
STRATUM_AREA
STRATUM_AREA <- nwos_stratum_area(state.area = STATE_AREA, stratum = df$STRATUM, point.count = df$POINT_COUNT)
nwos_response_rate(point.count = df$POINT_COUNT, response = df$RESPONSE)
nwos_response_rate(point.count = df$POINT_COUNT[df$STRATUM %in% 1], response = df$RESPONSE[df$STRATUM %in% 1])
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
W <- nwos_weights(stratum.area = STRATUM_AREA, response.rate = RESPONSE_RATE,
point.count = df$POINT_COUNT,
owner.area = df$ACRES_FOREST,
stratum = df$STRATUM)
RESPONSE_RATE <- nwos_response_rate(point.count = df$POINT_COUNT[df$STRATUM %in% 1],
response = df$RESPONSE[df$STRATUM %in% 1])
W <- nwos_weights(stratum.area = STRATUM_AREA, response.rate = RESPONSE_RATE,
point.count = df$POINT_COUNT,
owner.area = df$ACRES_FOREST,
stratum = df$STRATUM)
sum(W)
sum(W, na.rm=T)
W
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
W <- nwos_weights(stratum.area = STRATUM_AREA, response.rate = RESPONSE_RATE,
point.count = df$POINT_COUNT,
owner.area = df$ACRES_FOREST,
stratum = df$STRATUM)
sum(W, na.rm=T)
df$WEIGHT <- nwos_weights(stratum.area = STRATUM_AREA, response.rate = RESPONSE_RATE,
point.count = df$POINT_COUNT, owner.area = df$ACRES_FOREST, stratum = df$STRATUM)
sum(df$WEIGHT, na.rm=T)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_total.R')
OWN_TOTAL <- nwos_total(weight = df$WEIGHT)
AC_TOTAL <- nwos_total(weight = df$WEIGHT, area = df$ACRES_FOREST)
REPLICATES <- nwos_replicates(df)
REPLICATES <- nwos_replicates(df)
pc <- df$POINT_COUNT
pc <- df$POINT_COUNT
row.names(pc)
df$POINT_COUNT[c(1,1,1,22)]
df$POINT_COUNT[c(2,1,1,22)]
row.names(df) <- 1:NROW(df)
REPLICATES <- nwos_replicates(df)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = RESPONSE_RATE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = RESPONSE_RATE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
STATE_AREA
df$POINT_COUNT
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = RESPONSE_RATE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
OWN_TOTAL_VAR
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = RESPONSE_RATE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
OWN_TOTAL_VAR
df$STRATUM
stratum = df$STRATUM
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
OWN_TOTAL_VAR
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
?numeric
ESTIMATES <- numeric(NCOL(replicates))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = row.names(df))
stratum
index
index = row.names(df)
index
stratum[index]
stratum[as.nuermic(index)]
stratum[as.numeric(index)]
r=1
replicates[,r]
replicates = REPLICATES
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
replicates[,r]
str(replicates)
row.names(df) <- 1:NROW(df)
REPLICATES <- nwos_replicates(df)
str(REPLICATES)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(df)
str(REPLICATES)
index = as.numeric(row.names(df))
replicates = REPLICATES
replicates[,r]
stratum[replicates[,r]]
NROW(replicates[,r])
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(index = as.numeric(row.names(df)), point.count = df$POINT_COUNT)
REPLICATES[1:10,1]
replicates[,r]
NROW(replicates[,r])
replicates = REPLICATES
NROW(replicates[,r])
stratum[replicates[,r]]
NROW(stratum[replicates[,r]])
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
sqrt(351941578638)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
stratum[replicates[,r]]
r
r=10
stratum[replicates[,r]]
nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = 1)
nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NRWO(replicates[,r])))
nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NROW(replicates[,r])))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
sqrt(321365452)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
OWN_TOTAL_VAR
sqrt(OWN_TOTAL_VAR)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
OWN_TOTAL_VAR
AC_TOTAL_VAR  <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
AC_TOTAL_VAR
sqrt(225342190469)
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
AC_TOTAL_VAR  <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES[,1:10], index = as.numeric(row.names(df)))
OWN_TOTAL_VAR <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1,
replicates = REPLICATES, index = as.numeric(row.names(df)))
AC_TOTAL_VAR  <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
OWN_TOTAL_VAR
sqrt(354318993)
AC_TOTAL_VAR
sqrt(248449289171)
nwos_total(WEIGHT, area = owner.area.estimate)
estimate(1)
estimate <- function(r) {
STRATUM_AREA_REP <- nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NROW(replicates[,r])))
STRATUM_RESPONSE_RATE <- nwos_response_rate(point.count = point.count[stratum %in% 1],
response = response[stratum %in% 1])
WEIGHT <- nwos_weights(stratum.area = STRATUM_AREA_REP,
response.rate = STRATUM_RESPONSE_RATE,
point.count = point.count,
owner.area = owner.area,
stratum = stratum)
nwos_total(WEIGHT, area = owner.area.estimate)
}
estimate(1)
estimate <- function(r,
state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1) {
STRATUM_AREA_REP <- nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NROW(replicates[,r])))
STRATUM_RESPONSE_RATE <- nwos_response_rate(point.count = point.count[stratum %in% 1],
response = response[stratum %in% 1])
WEIGHT <- nwos_weights(stratum.area = STRATUM_AREA_REP,
response.rate = STRATUM_RESPONSE_RATE,
point.count = point.count,
owner.area = owner.area,
stratum = stratum)
nwos_total(WEIGHT, area = owner.area.estimate)
}
estimate(1)
estimate(2)
estimate(1:2)
lappy(1:10, estimate)
lapply(1:10, estimate)
sapply(1:10, estimate)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
STRATUM_AREA_REP <- nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NROW(replicates[,r])))
var(sapply(1:10, nwos_estimate))
nwos_estimate <- function(r,
state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1) {
STRATUM_AREA_REP <- nwos_stratum_area(state.area = state.area,
stratum = stratum[replicates[,r]],
point.count = rep(1, NROW(replicates[,r])))
STRATUM_RESPONSE_RATE <- nwos_response_rate(point.count = point.count[stratum %in% 1],
response = response[stratum %in% 1])
WEIGHT <- nwos_weights(stratum.area = STRATUM_AREA_REP,
response.rate = STRATUM_RESPONSE_RATE,
point.count = point.count,
owner.area = owner.area,
stratum = stratum)
nwos_total(WEIGHT, area = owner.area.estimate)
}
var(sapply(1:10, nwos_estimate))
var(sapply(1:1000, nwos_estimate))
var(sapply(1:1000, nwos_estimate, state.area=10))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
owner.area.estimate = 1,
replicates = REPLICATES, index = as.numeric(row.names(df)))
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate_replicate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate_replicate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
AC_TOTAL_VAR  <- nwos_variance(state.area = STATE_AREA,
point.count = df$POINT_COUNT, response = df$RESPONSE,
owner.area = df$ACRES_FOREST, stratum = df$STRATUM,
replicates = REPLICATES, index = as.numeric(row.names(df)),
units = "ACRES")
AC_TOTAL_VAR
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate_replicate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_variance.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_estimate_replicates.R')
