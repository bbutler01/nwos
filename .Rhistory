REPLICATES <- nwos_replicates(index = row.names(wi), point.count = wi$POINT_COUNT)
WI_FFO_AREA <- nwos_stratum_area(point.count = wi$POINT_COUNT, stratum = wi$FFO, state.area = 33898733)
WI_FFO_AREA
# For replicates
WI_FFO_AREA_REP <- tapply(wi[R2$ROW_NAME,]$FFO, R2$REPLICATE, nwos_stratum_area, state.area = 33898733)
WI_FFO_AREA_REP
# For replicates
WI_FFO_AREA_REP <- tapply(wi[REPLICATES$INDEX,]$FFO, REPLICATES$REPLICATE, nwos_stratum_area, state.area = 33898733)
WI_FFO_AREA_REP
REPLICATES
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
WI_FFO_RESPONSE_RATE <- nwos_response_rate(stratum = wi$STRATUM, point.count = wi$POINT_COUNT, response = wi$RESPONSE)
wi$STRATUM
WI_FFO_RESPONSE_RATE <- nwos_response_rate(stratum = wi$SFFO, point.count = wi$POINT_COUNT, response = wi$RESPONSE)
WI_FFO_RESPONSE_RATE <- nwos_response_rate(stratum = wi$FFO, point.count = wi$POINT_COUNT, response = wi$RESPONSE)
wi$FFO
wi$POINT_COUNT
wi$RESPONSE
wi <- wi %>% mutate(RESPONSE = if_else(RESPONSE_PROPENSITY >= 0.5, 1, 0))
WI_FFO_RESPONSE_RATE <- nwos_response_rate(stratum = wi$FFO, point.count = wi$POINT_COUNT, response = wi$RESPONSE)
WI_FFO_RESPONSE_RATE
WI_FFO_RR <- nwos_response_rate(stratum = wi$FFO, point.count = wi$POINT_COUNT, response = wi$RESPONSE)
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX,]$FFO, REPLICATES$REPLICATE, nwos_response_rate, response = wi[REPLICATES$INDEX,]$RESPONSE)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
R1 <- REPLICATES %>% filter(REPLICATE %in% 1)
tapply(wi[R1$INDEX,]$FFO, R1$REPLICATE, nwos_response_rate, response = wi[R1$INDEX,]$RESPONSE)
R1 <- REPLICATES %>% filter(REPLICATE %in% c(1,2))
tapply(wi[R1$INDEX,]$FFO, R1$REPLICATE, nwos_response_rate, response = wi[R1$INDEX,]$RESPONSE)
R1 <- REPLICATES %>% filter(REPLICATE %in% c(1,2,3))
tapply(wi[R1$INDEX,]$FFO, R1$REPLICATE, nwos_response_rate, response = wi[R1$INDEX,]$RESPONSE)
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX,]$FFO, REPLICATES$REPLICATE, nwos_response_rate, response = wi[REPLICATES$INDEX,]$RESPONSE)
?pbapply
library(pbapply)
?pbapply
R2 <- REPLICATES %>% select(REPLICATE %in% 1:2)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
R2$INDEX
names(REPLICATES)
names(R2)
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:2)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:100)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:1000)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
start <- Sys.time()
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:100)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
5000/100
50*5
250/60
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:2)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:3)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:3)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:3)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:10)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:10)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:100)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
start <- Sys.time()
R2 <- REPLICATES %>% filter(REPLICATE %in% 1:100)
tapply(wi[R2$INDEX,]$FFO, R2$REPLICATE, nwos_response_rate, response = wi[R2$INDEX,]$RESPONSE)
Sys.time() - start
5 / 100
start <- Sys.time()
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX,]$FFO, REPLICATES$REPLICATE, nwos_response_rate, response = wi[REPLICATES$INDEX,]$RESPONSE)
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX[1:1500],]$FFO, REPLICATES$REPLICATE[1:1500], nwos_response_rate, response = wi[REPLICATES$INDEX[1:1500],]$RESPONSE)
WI_FFO_RR_REP
start <- Sys.time()
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX[1:1500],]$FFO, REPLICATES$REPLICATE[1:1500], nwos_response_rate, response = wi[REPLICATES$INDEX[1:1500],]$RESPONSE)
Sys.time() - start
start <- Sys.time()
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX[1:1500],]$FFO, REPLICATES$REPLICATE[1:1500], nwos_response_rate, response = wi[REPLICATES$INDEX[1:1500],]$RESPONSE)
Sys.time() - start
start <- Sys.time()
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX[1:150000],]$FFO, REPLICATES$REPLICATE[1:150000], nwos_response_rate, response = wi[REPLICATES$INDEX[1:150000],]$RESPONSE)
Sys.time() - start
150000/1500
start <- Sys.time()
WI_FFO_RR_REP <- tapply(wi[REPLICATES$INDEX[1:1500000],]$FFO, REPLICATES$REPLICATE[1:1500000], nwos_response_rate, response = wi[REPLICATES$INDEX[1:1500000],]$RESPONSE)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(index = row.names(wi), point.count = wi$POINT_COUNT)
wi <- wi %>% mutate(FFO = if_else(LAND_USE == 1 & OWN_CD == 45, 1, 0))
WI_FFO_AREA <- nwos_stratum_area(point.count = wi$POINT_COUNT, stratum = wi$FFO, state.area = 33898733)
?sapply
names(REPLICATES)
R2 <- REPLICATES[,1:2]
lapply(R2, nwos_stratum_area, stratum = wi$FFO[R2], point.count = wi$POINT_COUNT[R2], state.area = 33898733)
lapply(R2, mean)
apply(R2, 2, mean)
apply(as.numeric(R2), 2, mean)
as.numeric(R2)
apply(data.frame(R2), 2, mean)
data.frame(R2)
apply(data.frame(as.numeric(R2)), 2, mean)
data.frame(as.numeric(R2))
apply(R2, 2, nwos_stratum_area, stratum = wi$FFO[R2], point.count = wi$POINT_COUNT[R2], state.area = 33898733)
lapply(R2, nwos_stratum_area, stratum = wi$FFO[R2], point.count = wi$POINT_COUNT[R2], state.area = 33898733)
lapply(wi$FFO[R2], nwos_stratum_area,  point.count = wi$POINT_COUNT[R2], state.area = 33898733)
?apply
?split
r.l <- split(REPLICATES, col(REPLICATES))
lapply(r.l, summary)
lapply(r.l, nwos_stratum_area, stratum = wi$FFO[r.l], point.count = wi$POINT_COUNT[r.l], state.area = 33898733)
lapply(wi$FFO[r.l], nwos_stratum_area,  point.count = wi$POINT_COUNT[r.l], state.area = 33898733)
?lapply
wi$FFO[r.l]
lapply(r.l[1:2], summary)
sapply(r.l[1:2], summary)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
data <- wi
index <- 1:1000
data <- data.frame(stratum = data$FFO[index,], point.count = data$POINT_COUNT[index,]) # Create data frame
data <- data.frame(stratum = data$FFO[index], point.count = data$POINT_COUNT[index]) # Create data frame
View(data)
data <- data.frame(stratum = data[index,]$FFO, point.count = data[index,]$POINT_COUNT) # Create data frame
n <- data %>% filter(stratum %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points
n.s <- data %>% filter(stratum %in% c(1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
as.numeric((n.s / n) * state.area) # Calculate stratum area
n
data <- data.frame(stratum = data[index,]$FFO, point.count = data[index,]$POINT_COUNT) # Create data frame
index
index<-c("1","2")
data <- data.frame(stratum = data[index,]$FFO, point.count = data[index,]$POINT_COUNT) # Create data frame
index
data[index,]
data <- wi
x <- data.frame(stratum = data[index,]$FFO, point.count = data[index,]$POINT_COUNT) # Create data frame
index<-1:1000
x <- data.frame(stratum = data[index,]$FFO, point.count = data[index,]$POINT_COUNT) # Create data frame
n <- data %>% filter(stratum %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points
n.s <- data %>% filter(stratum %in% c(1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
as.numeric((n.s / n) * state.area) # Calculate stratum area
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
stratum
stratum = "FFO"
stratum
data$stratum
data[,stratum]
x <- data.frame(stratum = data[index, stratum], point.count = data[index, point.count]) # Create data frame
data[index, stratum]
point.count = "POINT_COUNT"
x <- data.frame(stratum = data[index, stratum], point.count = data[index, point.count]) # Create data frame
x
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
nwos_stratum_area(index = 1:10, data = wi, state.area = 100)
index = 1:10
data = wi
state.area = 100
x <- data.frame(stratum = data[index, stratum], point.count = data[index, point.count]) # Create data frame
n <- x %>% filter(stratum %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points
str(x)
x <- data.frame(s = data[index, stratum], pc = data[index, point.count]) # Create data frame
str(x)
?data.frame
data[index, stratum]
x <- data.frame(s = as.factor(data[index, stratum]), pc = data[index, point.count]) # Create data frame
as.factor(data[index, stratum])
x <- data.frame(s = data[index, stratum], pc = data[index, point.count]) # Create data frame
names(x)
names(x) <- c("stratum", "point.count")
names(x)
x
n <- x %>% filter(stratum %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points
n.s <- x %>% filter(stratum %in% c(1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
as.numeric((n.s / n) * state.area) # Calculate stratum area
n <- x %>% filter(x[,1] %in% c(0,1)) %>% summarize(sum(x[,2])) # Number of sample points
data.frame(data[index, stratum], data[index, point.count])
x <- data.frame("S" = data[index, stratum], data[index, point.count]) # Create data frame
x
x2 <- data[index, stratum]
str(x2)
x2 <- as.data.frame(data[index, stratum])
str(x2)
x <- data.frame(as.data.frame(data[index, stratum]), data[index, point.count]) # Create data frame
x
x <- data.frame(d = as.data.frame(data[index, stratum]), data[index, point.count]) # Create data frame
x
x2 <- data[index, stratum]
x2 <- as.nuemric(data[index, stratum])
x2 <- as.numeric(data[index, stratum])
str(x2)
str(x2$FFO)
x3 <- str(x2$FFO)
x3 <- x2$FFO
str(x3)
data[index, stratum][,1]
x <- data.frame(S = data[index, stratum][,1], data[index, point.count]) # Create data frame
x
x <- data.frame(S = as.numeric(data[index, stratum][,1]), data[index, point.count]) # Create data frame
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
nwos_stratum_area(index = 1:10, data = wi, state.area = 100)
nwos_stratum_area(index = row.names(wi), data = wi, state.area = 100)
nwos_stratum_area(index = row.names(wi), data = wi, state.area = 33898733)
nwos_stratum_area(data = wi, state.area = 33898733)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
sapply(R2, nwos_stratum_area, data = wi, state.area)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
sapply(R2, nwos_stratum_area, data = wi, state.area)
sapply(R2, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area)
lapply(R2, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area)
r2.l <- split(R2, col(R2))
lapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area)
lapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
sapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
r2.l
sapply(row.names(wi), nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
sapply(list(row.names(wi)), nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
REPLICATES[,1]
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
# data[,stratum]
#
nwos_stratum_area(data = wi, state.area = 33898733)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
index = NA
lenght(index)
length(index)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,1:2]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,2]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = "POINT_COUNT", state.area = 33898733)
index=REPLICATES[,1]
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
sapply(list(REPLICATES[,2]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,1]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(list(REPLICATES[,1:2]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
list(REPLICATES[,1:2])
lapply(list(REPLICATES[,1:2]), nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
lapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
sapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
WI_FFO_AREA_REP <- sapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
WI_FFO_AREA_REP
REP.LIST <- split(REPLICATES, col(REPLICATES))
WI_FFO_AREA_REP <- sapply(r2.l, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
WI_FFO_AREA_REP <- sapply(REP.LIST, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
WI_FFO_AREA_REP
mean(WI_FFO_AREA_REP)
WI_FFO_AREA
?split
?group_by
REP.LIST2 <- REPLICATES %>% group_by()
REP.LIST2 <- tbl_df(REPLICATES) %>% group_by()
str(REP.LIST2)
?dlply
REP.LIST2 <- dlply(REPLICATES)
REP.LIST2 <- dlply(REPLICATES)
?libary(plyr)
library(plyr)
REP.LIST2 <- dlply(REPLICATES)
REP.LIST2 <- dlply(REPLICATES, "V1", identity)
REP.LIST <- split(REPLICATES, col(REPLICATES))
WI_FFO_AREA_REP <- sapply(REP.LIST, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(index = row.names(wi), point.count = wi$POINT_COUNT)
WI_FFO_AREA_REP <- sapply(REPLICATES, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
WI_FFO_AREA_REP
start <- Sys.time()
WI_FFO_AREA_REP <- sapply(REPLICATES, nwos_stratum_area, data = wi, stratum = "FFO", point.count = 1, state.area = 33898733)
Sys.time() - start
28.91676 / 5000
#' NWOS Replicates
#'
#' Generate replicates that can be used for NWOS bootstrapping variance estimation.
#' @usage nwos_replicates(index, point.count, R = 5000)
#' @param index vector uniquely identifying each observation. This is typically the data frame row names.
#' @param point.count the number of sample points associated with each observation. The default is 1.
#' @param R number of replicates or bootstraps. Default is 5000.
#' @details
#' This function needs to be run by state.
#' @return
#' List containing indices for the observations that make up each of the replicates.
#' @references
#' Butler, B.J. In review. Weighting for the US Forest Service, National Woodland Owner Survey. U.S. Department of Agriculture, Forest Service, Northern Research Station. Newotwn Square, PA.
#' @keywords nwos
#' @export
#' @examples
#' REPLICATES <- nwos_replicates(index = row.names(wi), point.count = wi$POINT_COUNT, R = 100)
nwos_replicates <- function(index, point.count = 1, R = 5000) {
data <- data.frame(index, point.count, stringsAsFactors = FALSE) %>%
slice(rep(1:n(), point.count)) %>% # Expand data based on POINT_COUNT
mutate(point.count = 1) # Reset point counts to 1
replicates <- replicate(R, sample(data$index, NROW(data$index), replace = T)) # Generate replicates
split(replicates, col(replicates)) # Convert to list
}
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
WI_FFO_AREA <- nwos_stratum_area(point.count = wi$POINT_COUNT, stratum = wi$FFO, state.area = 33898733)
WI_FFO_AREA <- nwos_stratum_area(data = wi, state.area = 33898733)
WI_FFO_AREA
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
WI_FFO_AREA <- nwos_stratum_area(data = wi, stratum = "FFO", state.area = 33898733)
WI_FFO_AREA
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
?mean
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(index = row.names(wi), point.count = wi$POINT_COUNT, R = 100)
REPLICATES <- nwos_replicates(index = row.names(wi), data = wi,  point.count = "POINT_COUNT", R = 100)
REPLICATES <- nwos_replicates(data = wi, R = 10)
View(REPLICATES)
REPLICATES
REPLICATES <- nwos_replicates(data = wi)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
nwos_response_rate(data = wi)
data = wi
index <- row.names(data)
stratum = "FFO"
point.count = "POINT_COUNT"
response = "RESPONSE"
x <- data.frame(data[index, c(stratum, point.count, response)])
names(x) <- c("stratum", "point.count", "response")
n.s <- x %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
n.s.r <- x %>% filter(stratum %in% c(1), response %in% c(1)) %>% summarize(sum(point.count)) # Number of respondent sample points in stratum
as.numeric(n.s.r / n.s) # Calculate response rate
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
nwos_response_rate(data = wi)
WI_FFO_RR <- nwos_response_rate(data = wi)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
REPLICATES[1]
sapply(REPLICATES[1], nwos_response_rate, data = wi, point.count = 1)
sapply(REPLICATES[1:2], nwos_response_rate, data = wi, point.count = 1)
WI_FFO_RR_REP <- sapply(REPLICATES, nwos_response_rate, data = wi, point.count = 1)
start <- Sys.time()
WI_FFO_RR_REP <- sapply(REPLICATES, nwos_response_rate, data = wi, point.count = 1)
Sys.time() - start
29.70449 / 5000
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
rm(list=ls())
wi <- tbl_df(read.csv("../data/wi.csv")) %>% mutate(ROW_NAME = row.names(wi))
wi <- tbl_df(read.csv("../data/wi.csv")) %>% mutate(ROW_NAME = row.names(wi))
wi <- tbl_df(read.csv("../data/wi.csv"))
wi <- wi %>% mutate(ROW_NAME = row.names(wi))
REPLICATES <- nwos_replicates(data = wi)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_replicates.R')
REPLICATES <- nwos_replicates(data = wi)
wi <- wi %>% mutate(FFO = if_else(LAND_USE == 1 & OWN_CD == 45, 1, 0))
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_stratum_area.R')
wi <- wi %>% mutate(FFO = if_else(LAND_USE == 1 & OWN_CD == 45, 1, 0))
WI_FFO_AREA <- nwos_stratum_area(data = wi, state.area = 33898733)
WI_FFO_AREA_REP <- sapply(REPLICATES, nwos_stratum_area, data = wi, point.count = 1, state.area = 33898733)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_response_rate.R')
wi <- wi %>% mutate(RESPONSE = if_else(RESPONSE_PROPENSITY >= 0.5, 1, 0))
WI_FFO_RR <- nwos_response_rate(data = wi)
WI_FFO_RR_REP <- sapply(REPLICATES, nwos_response_rate, data = wi, point.count = 1)
R2 <- list(list(REPLICATES[1], WI_FFO_AREA_REP[1]))
R2
R2 <- list(list(INDEX = REPLICATES[1], AREA = WI_FFO_AREA_REP[1]))
R2
R2[[1]]$AREA
R2 <- list(list(INDEX = REPLICATES[1], AREA = WI_FFO_AREA_REP[1], RR = WI_FFO_RR_REP[1]))
x = R2
data = wi
stratum.area <- x[[1]]$AREA
response.rate <- x[[1]]$RR
stratum = "FFO"
point.count = "POINT_COUNT"
response = "RESPONSE"
x2 <- data.frame(data[index, c(stratum, point.count, response)])
index <- x[[1]]$INDEX
x2 <- data.frame(data[index, c(stratum, point.count, response)]) # Create data frame
?unlist
index <- unlist(x[[1]]$INDEX)
x2 <- data.frame(data[index, c(stratum, point.count, response)])
stratum.area.correction=stratum.area
stratum.area
n.s <- x2 %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
names(x2)
names(x) <- c("stratum", "point.count", "response")
names(x2) <- c("stratum", "point.count", "response")
n.s <- x2 %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
n.s
stratum.area <- stratum.area.correction # Corrected stratum area
response.rate
names(wi)
owner.area = ACRES
# if(point.count == 1) x <- data.frame(data[index, stratum], 1, data[index, response])
# else
x2 <- data.frame(data[index, c(stratum, point.count, response, owner.area)]) # Create data frame
owner.area = "ACRES"
# if(point.count == 1) x <- data.frame(data[index, stratum], 1, data[index, response])
# else
x2 <- data.frame(data[index, c(stratum, point.count, response, owner.area)]) # Create data frame
names(x2) <- c("stratum", "point.count", "response", "owner.area")
n.s <- x2 %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count)) # Number of sample points in stratum
stratum.area <- stratum.area.correction # Corrected stratum area
stratum.area
owner.area
((stratum.area / (x2$owner.area * n.s)) * x2$point.count) * (1 / response.rate) * stratum # Weights
x2$owner.area
n.s
x2$point.count
response.rate
stratum
((stratum.area / (x2$owner.area * n.s)) * x2$point.count) * (1 / response.rate) * x2$stratum # Weights
n.s
n.s <- as.numeric(x2 %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count))) # Number of sample points in stratum
n.s
((stratum.area / (x2$owner.area * n.s)) * x2$point.count) * (1 / response.rate) * x2$stratum # Weights
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
nwos_weights()
nwos_weights()
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
nwos_weights()
WI_FFO_WEIGHTS <- nwos_weights(data = wi)
sum(WI_FFO_WEIGHTS)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
replicates = NULL
length(replicates)
length(R2)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
WI_FFO_WEIGHTS <- nwos_weights(data = wi)
sum(WI_FFO_WEIGHTS)
WI_FFO_AREA
WI_FFO_RR
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
WI_FFO_WEIGHTS <- nwos_weights(data = wi, stratum.area = 10870194, response.rate = 0.4808511)
sum(WI_FFO_WEIGHTS)
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
WI_FFO_WEIGHTS <- nwos_weights(data = wi, stratum.area = 10870194, response.rate = 0.4808511)
data = wi
index <- row.names(data)
x <- data.frame(data[index, c(stratum, point.count, response, owner.area)]) # Create data frame
names(x) <- c("stratum", "point.count", "response", "owner.area")
n.s <- as.numeric(x %>% filter(stratum %in% c(1), response %in% c(0,1)) %>% summarize(sum(point.count))) # Number of sample points in stratum
((stratum.area / (x$owner.area * n.s)) * x$point.count) * (1 / response.rate) * x2$stratum # Weights
x$owner.area
x$point.count
x2$stratum
source('~/Dropbox (FFRC)/NWOS/GENERAL/PRODUCTS/SCIENCE/WEIGHTING/PACKAGE/nwos/R/nwos_weights.R')
WI_FFO_WEIGHTS <- nwos_weights(data = wi, stratum.area = 10870194, response.rate = 0.4808511)
sum(WI_FFO_WEIGHTS)
R2 <- list(list(INDEX = REPLICATES[1], AREA = WI_FFO_AREA_REP[1], RR = WI_FFO_RR_REP[1]),
list(INDEX = REPLICATES[2], AREA = WI_FFO_AREA_REP[2], RR = WI_FFO_RR_REP[2]))
WI_FFO_RR_REP <- sapply(REPLICATES, nwos_weights, data = wi, point.count = 1)
WI_FFO_RR_REP <- sapply(R2, nwos_weights, data = wi, point.count = 1)
WI_FFO_RR_REP
?apply
?lapply
rep.list <- function(x) {list(INDEX = REPLICATES[x], AREA = WI_FFO_AREA_REP[x], RR = WI_FFO_RR_REP[x])}
R2.2 <- rep.list(1)
View(R2.2)
x2 <- lapply(1:2, rep.list)
x2
x2[[1]]$AREA
x2[[1]]$INDEX
rep.list <- function(x) {list(INDEX = unlist(REPLICATES[x]), AREA = WI_FFO_AREA_REP[x], RR = WI_FFO_RR_REP[x])}
x2 <- lapply(1:2, rep.list)
x2[[1]]$INDEX
WI_FFO_RR_REP <- sapply(x2, nwos_weights, data = wi, point.count = 1)
WI_FFO_RR_REP
WI_FFO_RR_REP <- sapply(REPLICATES, nwos_response_rate, data = wi, point.count = 1)
R2 <- list(list(INDEX = REPLICATES[1], AREA = WI_FFO_AREA_REP[1], RR = WI_FFO_RR_REP[1]),
list(INDEX = REPLICATES[2], AREA = WI_FFO_AREA_REP[2], RR = WI_FFO_RR_REP[2]))
WI_FFO_WEIGHTS_R2 <- sapply(R2, nwos_weights, data = wi, point.count = 1)
WI_FFO_WEIGHTS_R2
WI_FFO_WEIGHTS_R2.2 <- sapply(R2.2, nwos_weights, data = wi, point.count = 1)
rep.list <- function(x) {list(INDEX = unlist(REPLICATES[x]), AREA = WI_FFO_AREA_REP[x], RR = WI_FFO_RR_REP[x])}
R2.2 <- lapply(1:2, rep.list)
WI_FFO_WEIGHTS_R2.2 <- sapply(R2.2, nwos_weights, data = wi, point.count = 1)
WI_FFO_WEIGHTS_R2.2
?mapply
?sapply
